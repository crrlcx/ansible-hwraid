---
# tasks file for ansible-hwraid

# Copyright (C) 2014-2019 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2015-2019 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Select supported release for current distribution
  set_fact:
    hwraid_register_release: |
      {{ hwraid_release if (hwraid_release in hwraid_distribution_releases[hwraid_distribution])
                        else hwraid_distribution_releases[hwraid_distribution][0] }}

- name: install | add apt key
  apt_key:
    url: 'https://hwraid.le-vert.net/debian/hwraid.le-vert.net.gpg.key'
    state: present
  register: hwraid_apt_key

- name: install | add repos
  apt_repository:
    repo: "deb http://hwraid.le-vert.net/{{ hwraid_distribution | lower }} {{ hwraid_register_release | lower }} main"
    state: present
  register: hwraid_apt_sourcelist

- name: install | update package cache
  apt:
    update_cache: true
  when:
    - hwraid_apt_key.changed or hwraid_apt_sourcelist.changed

- name: Get list of active kernel modules
  shell: |
    set -o nounset -o pipefail -o errexit
    lsmod | cut -d' ' -f 1 -s | sort -u
  args:
    executable: /bin/bash
  register: hwraid_register_modules
  changed_when: false
  check_mode: false

- name: Install packages for recognized RAID devices
  apt:
    name: "{{ item.packages }}"
    state: latest
    install_recommends: false
    force: true
    force_apt_get: true
    dpkg_options: "{{ dpkg_force_overwrite_configs | ternary('force-confdef,force-confnew', 'force-confdef,force-confold') }}"
    update_cache: yes
    cache_valid_time: 3600
  environment:
    DEBIAN_FRONTEND: noninteractive
    RUNLEVEL: 1
  loop: "{{ hwraid_device_database }}"
  register: hwraid__register_packages
  until: hwraid__register_packages is succeeded
  when:
    - hwraid_register_release is defined
    - hwraid_register_release | length > 0
    - item.module not in hwraid_blacklist
    - item.module in hwraid_register_modules.stdout_lines

- name: Make sure service starts at boot
  service:
    name: "{{ item.daemon }}"
    state: 'started'
    enabled: true
  loop: "{{ hwraid_device_database }}"
  when:
    - hwraid_register_release is defined
    - hwraid_register_release | length > 0
    - item.module not in hwraid_blacklist
    - item.module in hwraid_register_modules.stdout_lines
    - item.daemon is defined
    - item.daemon | length > 0
